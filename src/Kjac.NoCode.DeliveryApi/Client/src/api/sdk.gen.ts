// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetNoCodeDeliveryApiClientData, GetNoCodeDeliveryApiClientResponse, PostNoCodeDeliveryApiClientData, DeleteNoCodeDeliveryApiClientByIdData, PutNoCodeDeliveryApiClientByIdData, GetNoCodeDeliveryApiFilterData, GetNoCodeDeliveryApiFilterResponse, PostNoCodeDeliveryApiFilterData, PostNoCodeDeliveryApiFilterError, DeleteNoCodeDeliveryApiFilterByIdData, DeleteNoCodeDeliveryApiFilterByIdError, PutNoCodeDeliveryApiFilterByIdData, PutNoCodeDeliveryApiFilterByIdError, GetNoCodeDeliveryApiSortData, GetNoCodeDeliveryApiSortResponse, PostNoCodeDeliveryApiSortData, PostNoCodeDeliveryApiSortError, DeleteNoCodeDeliveryApiSortByIdData, DeleteNoCodeDeliveryApiSortByIdError, PutNoCodeDeliveryApiSortByIdData, PutNoCodeDeliveryApiSortByIdError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class ClientsService {
    public static getNoCodeDeliveryApiClient<ThrowOnError extends boolean = false>(options?: Options<GetNoCodeDeliveryApiClientData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetNoCodeDeliveryApiClientResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/client',
            ...options
        });
    }
    
    public static postNoCodeDeliveryApiClient<ThrowOnError extends boolean = false>(options?: Options<PostNoCodeDeliveryApiClientData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/client',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static deleteNoCodeDeliveryApiClientById<ThrowOnError extends boolean = false>(options: Options<DeleteNoCodeDeliveryApiClientByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/client/{id}',
            ...options
        });
    }
    
    public static putNoCodeDeliveryApiClientById<ThrowOnError extends boolean = false>(options: Options<PutNoCodeDeliveryApiClientByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/client/{id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class FiltersService {
    public static getNoCodeDeliveryApiFilter<ThrowOnError extends boolean = false>(options?: Options<GetNoCodeDeliveryApiFilterData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetNoCodeDeliveryApiFilterResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/filter',
            ...options
        });
    }
    
    public static postNoCodeDeliveryApiFilter<ThrowOnError extends boolean = false>(options?: Options<PostNoCodeDeliveryApiFilterData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, PostNoCodeDeliveryApiFilterError, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/filter',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static deleteNoCodeDeliveryApiFilterById<ThrowOnError extends boolean = false>(options: Options<DeleteNoCodeDeliveryApiFilterByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<unknown, DeleteNoCodeDeliveryApiFilterByIdError, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/filter/{id}',
            ...options
        });
    }
    
    public static putNoCodeDeliveryApiFilterById<ThrowOnError extends boolean = false>(options: Options<PutNoCodeDeliveryApiFilterByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<unknown, PutNoCodeDeliveryApiFilterByIdError, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/filter/{id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class SortersService {
    public static getNoCodeDeliveryApiSort<ThrowOnError extends boolean = false>(options?: Options<GetNoCodeDeliveryApiSortData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetNoCodeDeliveryApiSortResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/sort',
            ...options
        });
    }
    
    public static postNoCodeDeliveryApiSort<ThrowOnError extends boolean = false>(options?: Options<PostNoCodeDeliveryApiSortData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<unknown, PostNoCodeDeliveryApiSortError, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/sort',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static deleteNoCodeDeliveryApiSortById<ThrowOnError extends boolean = false>(options: Options<DeleteNoCodeDeliveryApiSortByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<unknown, DeleteNoCodeDeliveryApiSortByIdError, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/sort/{id}',
            ...options
        });
    }
    
    public static putNoCodeDeliveryApiSortById<ThrowOnError extends boolean = false>(options: Options<PutNoCodeDeliveryApiSortByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<unknown, PutNoCodeDeliveryApiSortByIdError, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/management/api/v1/no-code-delivery-api/sort/{id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}