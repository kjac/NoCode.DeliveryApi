// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { PostNoCodeDeliveryApiClientData, PostNoCodeDeliveryApiClientResponse, GetNoCodeDeliveryApiClientResponse, DeleteNoCodeDeliveryApiClientByIdData, DeleteNoCodeDeliveryApiClientByIdResponse, PutNoCodeDeliveryApiClientByIdData, PutNoCodeDeliveryApiClientByIdResponse, PostNoCodeDeliveryApiFilterData, PostNoCodeDeliveryApiFilterResponse, GetNoCodeDeliveryApiFilterResponse, DeleteNoCodeDeliveryApiFilterByIdData, DeleteNoCodeDeliveryApiFilterByIdResponse, PutNoCodeDeliveryApiFilterByIdData, PutNoCodeDeliveryApiFilterByIdResponse, PostNoCodeDeliveryApiSortData, PostNoCodeDeliveryApiSortResponse, GetNoCodeDeliveryApiSortResponse, DeleteNoCodeDeliveryApiSortByIdData, DeleteNoCodeDeliveryApiSortByIdResponse, PutNoCodeDeliveryApiSortByIdData, PutNoCodeDeliveryApiSortByIdResponse } from './types.gen';

export class ClientsService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static postNoCodeDeliveryApiClient(data: PostNoCodeDeliveryApiClientData = {}): CancelablePromise<PostNoCodeDeliveryApiClientResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/management/api/v1/no-code-delivery-api/client',
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getNoCodeDeliveryApiClient(): CancelablePromise<GetNoCodeDeliveryApiClientResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/management/api/v1/no-code-delivery-api/client',
            errors: {
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns string OK
     * @throws ApiError
     */
    public static deleteNoCodeDeliveryApiClientById(data: DeleteNoCodeDeliveryApiClientByIdData): CancelablePromise<DeleteNoCodeDeliveryApiClientByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/umbraco/management/api/v1/no-code-delivery-api/client/{id}',
            path: {
                id: data.id
            },
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static putNoCodeDeliveryApiClientById(data: PutNoCodeDeliveryApiClientByIdData): CancelablePromise<PutNoCodeDeliveryApiClientByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/umbraco/management/api/v1/no-code-delivery-api/client/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
}

export class FiltersService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static postNoCodeDeliveryApiFilter(data: PostNoCodeDeliveryApiFilterData = {}): CancelablePromise<PostNoCodeDeliveryApiFilterResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/management/api/v1/no-code-delivery-api/filter',
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getNoCodeDeliveryApiFilter(): CancelablePromise<GetNoCodeDeliveryApiFilterResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/management/api/v1/no-code-delivery-api/filter',
            errors: {
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns string OK
     * @throws ApiError
     */
    public static deleteNoCodeDeliveryApiFilterById(data: DeleteNoCodeDeliveryApiFilterByIdData): CancelablePromise<DeleteNoCodeDeliveryApiFilterByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/umbraco/management/api/v1/no-code-delivery-api/filter/{id}',
            path: {
                id: data.id
            },
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static putNoCodeDeliveryApiFilterById(data: PutNoCodeDeliveryApiFilterByIdData): CancelablePromise<PutNoCodeDeliveryApiFilterByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/umbraco/management/api/v1/no-code-delivery-api/filter/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
}

export class SortersService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static postNoCodeDeliveryApiSort(data: PostNoCodeDeliveryApiSortData = {}): CancelablePromise<PostNoCodeDeliveryApiSortResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/umbraco/management/api/v1/no-code-delivery-api/sort',
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
    /**
     * @returns unknown OK
     * @throws ApiError
     */
    public static getNoCodeDeliveryApiSort(): CancelablePromise<GetNoCodeDeliveryApiSortResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/umbraco/management/api/v1/no-code-delivery-api/sort',
            errors: {
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns string OK
     * @throws ApiError
     */
    public static deleteNoCodeDeliveryApiSortById(data: DeleteNoCodeDeliveryApiSortByIdData): CancelablePromise<DeleteNoCodeDeliveryApiSortByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/umbraco/management/api/v1/no-code-delivery-api/sort/{id}',
            path: {
                id: data.id
            },
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static putNoCodeDeliveryApiSortById(data: PutNoCodeDeliveryApiSortByIdData): CancelablePromise<PutNoCodeDeliveryApiSortByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/umbraco/management/api/v1/no-code-delivery-api/sort/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json',
            responseHeader: 'Umb-Notifications',
            errors: {
                400: 'Bad Request',
                401: 'The resource is protected and requires an authentication token',
                403: 'The authenticated user do not have access to this resource'
            }
        });
    }
    
}